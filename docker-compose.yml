version: '3.8'

services:
  traefik:
    image: traefik:2.6
    restart: always
    networks:
      pterodactyl:
        aliases:
          - pterodactyl.test
          - wings.pterodactyl.test
          - maildev.pterodactyl.test
    ports:
      - "443:443"
      - "8080:8080"
    security_opt:
      - no-new-privileges=true
    volumes:
      - ./traefik:/etc/traefik:ro
      - ./docker/certificates:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  app:
    image: ghcr.io/matthieuleboeuf/pterodactyl-development/panel:latest
    # build:
    #   context: ./build/panel
    #   dockerfile: Dockerfile
    stop_grace_period: '1s'
    networks:
      pterodactyl:
        aliases:
          - pterodactyl.test
    volumes:
      - ./code/panel:/var/www/html
      - ./docker/certificates:/etc/certs:ro
      - ./docker/php:/etc/php/mods-available:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.rule=Host(`pterodactyl.test`)"
      - "traefik.http.routers.app.entrypoints=https"
      - "traefik.http.routers.app.service=app"
      - "traefik.http.services.app.loadbalancer.server.port=80"
      - "traefik.http.routers.webpack-dev-server.tls=true"
      - "traefik.http.routers.webpack-dev-server.rule=Host(`pterodactyl.test`) && PathPrefix(`/webpack@hmr`, `/sockjs-node`)"
      - "traefik.http.routers.webpack-dev-server.entrypoints=https"
      - "traefik.http.routers.webpack-dev-server.service=webpack-dev-server"
      - "traefik.http.services.webpack-dev-server.loadbalancer.server.port=8080"
    environment:
      WWWUSER: ${WWWUSER:-$$(id -u)}
      WWWGROUP: ${WWWGROUP:-$$(id -g)}
  wings:
    image: ghcr.io/matthieuleboeuf/pterodactyl-development/wings:latest
    # build:
    #   context: ./build/wings
    #   dockerfile: Dockerfile
    stop_grace_period: '1s'
    tty: true
    stdin_open: true
    networks:
      - pterodactyl
    ports:
      - "2022:2022"
    volumes:
      - ./code/wings:/home/root/wings
      - ./data/go_modules:/root/go
      - /tmp/pterodactyl:/tmp/pterodactyl
      - /var/lib/pterodactyl:/var/lib/pterodactyl
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wings.tls=true"
      - "traefik.http.routers.wings.rule=Host(`wings.pterodactyl.test`)"
      - "traefik.http.routers.wings.entrypoints=https"
      - "traefik.http.services.wings.loadbalancer.server.port=8080"
    cap_add:
      - SYS_ADMIN
    #devices:
    #  - /dev/loop0
    #  - /dev/loop-control
  mysql:
    image: mariadb:latest
    restart: unless-stopped
    ports:
      - "3306:3306"
    command:
      - --innodb-buffer-pool-size=1G
      - --innodb-log-file-size=256M
      - --innodb-flush-log-at-trx-commit=0
      - --lower-case-table-names=1
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: panel
    networks:
      - pterodactyl
  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - pterodactyl
  maildev:
    image: maildev/maildev
    restart: unless-stopped
    networks:
      pterodactyl:
        aliases:
          - maildev.pterodactyl.test
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maildev.tls=true"
      - "traefik.http.routers.maildev.rule=Host(`maildev.pterodactyl.test`)"
      - "traefik.http.routers.maildev.entrypoints=https"
      - "traefik.http.services.maildev.loadbalancer.server.port=1080"

networks:
  pterodactyl:
    driver: bridge